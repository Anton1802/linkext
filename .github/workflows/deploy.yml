name: Deploy Docker Compose

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Update code in repository
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/linkext
            git fetch --all
            git reset --hard origin/master
            git clean -fd

      - name: Create .env file with environment variables
        uses: appleboy/ssh-action@v0.1.10
        env:
          MONGODB_URI: ${{ vars.MONGODB_URI }}
          NODE_ENV: production
          ALLOWED_ORIGINS: ${{ vars.ALLOWED_ORIGINS }}
          VITE_APP_API_URL: ${{ vars.VITE_APP_API_URL }}
          LINK_HOST: ${{ vars.LINK_HOST }}
          LINK_PORT: ${{ vars.LINK_PORT }}
          GOOGLE_CLIENT_ID: ${{ vars.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ vars.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ vars.GOOGLE_CALLBACK_URL }}
          JWT_SECRET: ${{ vars.JWT_SECRET }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: HOST,SERVER_USER,PORT,MONGODB_URI,NODE_ENV,ALLOWED_ORIGINS,VITE_APP_API_URL,LINK_HOST,LINK_PORT,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,GOOGLE_CALLBACK_URL,JWT_SECRET
          script: |
            cd /root/linkext
            echo "MONGODB_URI=${{ vars.MONGODB_URI }}" > .env
            echo "NODE_ENV=production" >> .env
            echo "ALLOWED_ORIGINS=${{ vars.ALLOWED_ORIGINS }}" >> .env
            echo "VITE_APP_API_URL=${{ vars.VITE_APP_API_URL }}" >> .env
            echo "LINK_HOST=${{ vars.LINK_HOST }}" >> .env
            echo "LINK_PORT=${{ vars.LINK_PORT }}" >> .env
            echo "GOOGLE_CLIENT_ID=${{ vars.GOOGLE_CLIENT_ID }}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${{ vars.GOOGLE_CLIENT_SECRET }}" >> .env
            echo "GOOGLE_CALLBACK_URL=${{ vars.GOOGLE_CALLBACK_URL }}" >> .env
            echo "JWT_SECRET=${{ vars.JWT_SECRET }}" >> .env

      - name: Add ssl sert and ssl key
        uses: appleboy/ssh-action@v0.1.10
        env:
          SSL_SERT: ${{ vars.SSL_SERT }}
          SSL_KEY: ${{ vars.SSL_KEY }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: SSL_SERT,SSL_KEY
          script: |
            cd /root/linkext

            echo "${{ vars.SSL_SERT }}" > nginx/cert.pem
            echo "${{ vars.SSL_KEY }}" > nginx/key.pem
        
      - name: Deploy on server with SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/linkext

            cp .env backend/.env
            cp .env frontend/.env

            docker compose down
            docker compose pull
            docker compose up -d --build
            docker system prune -af